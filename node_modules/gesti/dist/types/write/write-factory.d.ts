import ViewObject from "../abstract/view-object";
import WriteBase from "../abstract/write-category";
import Painter from "../painter";
export declare enum WriteType {
    None = 0,
    Write = 1,
    Rect = 2,
    Circle = 3,
    Line = 4
}
/**
 * down在已被选中图册上时不能绘制，
 * 当down图册上时  current=null,
 * 需要存储被选中绘制的类型
 * 每个类的生命周期为   down-move-up-诞生图册-长存
 * down需要做动作:判定是否在选定图册内,没有就new对象
 *
 */
declare class WriteFactory {
    private currentType;
    current: WriteBase;
    private paint;
    listen: (obj: ViewObject) => void;
    private config;
    setConfig(config: {
        color?: string;
        lineWidth?: number;
        type: GraffitiType;
    }): void;
    constructor(paint: Painter);
    private setWriteType;
    onDraw(): void;
    /**
     *
     * @returns 普通的绘制类
     */
    private write;
    /**
     *
     * @returns 矩形绘制类
     */
    private rect;
    /**
     *
     * @returns 线绘制类
     */
    private line;
    /**
     *
     * @returns 圆圈绘制类
     */
    private circle;
    done(): Promise<ViewObject>;
    cancel(): void;
}
export default WriteFactory;
//# sourceMappingURL=write-factory.d.ts.map