type DebounceCallback = (args: any) => void;
export declare const Debounce: (fun: DebounceCallback, delay: number) => (args: any) => void;
export declare const Throttle: (fun: DebounceCallback, delay: number) => (args: any) => void;
/**
 * 返回某个实例化对象是否等于某个类
 * @param obj 实例化对象
 * @param obj2 类名
 * @returns
 */
export declare const classTypeIs: (obj: any, obj2: any) => boolean;
/**
 * @description 1inch=72pt
 * @param inch
 */
export declare const inToPx: (inch: number) => number;
/**
 * @description 1inch=25.5 mm
 * @param mm
 * @returns
 */
export declare const mmToIn: (mm: number) => number;
/**
 * @description 1pt是一英镑=1/72(inch)英寸   取dpi=96
 * 得到    px=(pt/72)*96
 * @param pt
 */
export declare const ptToPx: (pt: number) => number;
export declare const sp: (pt: number) => number;
export declare const coverUnit: (value: number) => number;
export {};
//# sourceMappingURL=utils.d.ts.map