import Painter from "../painter";
import Rect from "../rect";
import ViewObject from "./view-object";
/**
 * 绘制类别
 */
declare abstract class WriteBase {
    paint: Painter;
    disableCanvasUpdate: boolean;
    color: string;
    /**
     * 收集在绘制过程中的最大点和最小点，以便于得到最终的矩形高宽
     */
    maxX: number;
    maxY: number;
    minX: number;
    minY: number;
    startPoint: Vector;
    config: {
        color?: string;
        lineWidth?: number;
        type: GraffitiType;
        isFill?: boolean;
    };
    constructor(paint: Painter);
    reset(): void;
    onDown(position: Vector | Vector[]): void;
    onUp(position: Vector | Vector[]): void;
    onMove(position: Vector | Vector[]): void;
    getRect(): Rect;
    setConfig(config: {
        color?: string;
        lineWidth?: number;
        type: GraffitiType;
    }): void;
    abstract draw(position: Vector): any;
    /**
     * 获取刚刚画的部分
     * @returns
     */
    abstract getWriteViewObject(): Promise<ViewObject>;
}
export default WriteBase;
//# sourceMappingURL=write-category.d.ts.map