import ViewObject from "../abstract/view-object";
import { ViewObjectFamily } from "../enums";
import Painter from "../painter";
/**
 * 文字
 */
declare class TextBox extends ViewObject {
    family: ViewObjectFamily;
    export(): Promise<Object>;
    exportWeChat(painter?: Painter, canvas?: any): Promise<Object>;
    originFamily: ViewObjectFamily;
    private _text;
    private fontsize;
    private _painter;
    private _fontFamily;
    private _spacing;
    private _spacing_scale;
    private _line;
    private _color;
    private linesMarks;
    private lineWidth;
    private lineHeight;
    private lineOffsetY;
    private lineColor;
    private _options;
    private lineOneHotMark;
    private column;
    private height;
    private width;
    private currentLineState;
    private resetFontSizeWithRect;
    private maxFontSize;
    constructor(text: string, options?: textOptions);
    custom(): void;
    drawSelected(paint: Painter): void;
    private initPrototypes;
    /**
     * 获取文本长度
     */
    private getWidthSize;
    drawImage(paint: Painter): void;
    private initColumns;
    didChangeScale(scale: number): void;
    updateText(text: string, options?: textOptions): Promise<void>;
    setDecoration(options: textOptions): void;
    didFallback(): void;
    /**
     * @description 宽不随文字变化，但文字随宽变化,高度随字体变化
     */
    private setData;
    get value(): any;
    get fontColor(): string;
    get fontSize(): number;
}
export default TextBox;
//# sourceMappingURL=text.d.ts.map