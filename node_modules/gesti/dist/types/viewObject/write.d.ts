import ViewObject from "../abstract/view-object";
import Painter from "../painter";
import { ViewObjectFamily } from "../enums";
/**
 * 实现逻辑
 * 新建一个 canvas等宽高的矩阵,锁定它，
 *
 */
declare class WriteViewObj extends ViewObject {
    family: ViewObjectFamily;
    export(): Promise<Object>;
    exportWeChat(painter?: Painter, canvas?: any): Promise<Object>;
    private points;
    private _scalex;
    private _scaley;
    private color;
    private isFill;
    originFamily: ViewObjectFamily;
    private type;
    private config;
    private lineWidth;
    constructor(points: Array<Vector>, color: string, config: {
        color?: string;
        lineWidth?: number;
        type: "circle" | "write" | "line" | "rect" | "none";
        scaleX?: number;
        scaleY?: number;
        isFill?: boolean;
    });
    setDecoration(decoration: {
        color?: string;
        isFill?: boolean;
        lineWidth?: number;
    }): void;
    setParams(config: {
        color?: string;
        lineWidth?: number;
        type: "circle" | "write" | "line" | "rect" | "none";
        scaleX?: number;
        scaleY?: number;
        isFill?: boolean;
    }): void;
    custom(): void;
    drawSelected(paint: Painter): void;
    drawImage(paint: Painter): void;
    private getCircleParams;
    didChangeScale(scale: number): void;
    get value(): any;
}
export default WriteViewObj;
//# sourceMappingURL=write.d.ts.map